# Generated by Django 4.1.1 on 2022-11-03 05:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccidentDetectionModel",
            fields=[
                (
                    "accident_model_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("accident_model_name", models.CharField(max_length=255)),
                ("accident_model_version", models.TextField()),
                ("train_set", models.CharField(max_length=255)),
                ("test_set", models.CharField(max_length=255)),
                ("tp", models.IntegerField()),
                ("fp", models.IntegerField()),
                ("fn", models.IntegerField()),
                ("tn", models.IntegerField()),
            ],
            options={
                "db_table": "accident_detection_model",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccidentInvestigationCard",
            fields=[
                (
                    "accident_investigation_card_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("manager_id", models.IntegerField()),
                ("investigation_start_time", models.DateTimeField()),
                ("investigation_end_time", models.DateTimeField()),
                ("work_done", models.BooleanField()),
                ("memo", models.TextField(blank=True, null=True)),
                ("is_accident", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "accident_investigation_card",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccidentPredictionResult",
            fields=[
                (
                    "accident_prediction_result_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("accident_time", models.TextField(blank=True, null=True)),
                ("accident_probability", models.TextField()),
            ],
            options={
                "db_table": "accident_prediction_result",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BlackboxDevice",
            fields=[
                (
                    "blackbox_device_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("blackbox_model_id", models.IntegerField()),
                ("blackbox_device_serial_number", models.IntegerField()),
                ("blackbox_last_checked_at", models.DateTimeField()),
                ("blackbox_firmware_version", models.TextField()),
                ("blackbox_firmware_updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "blackbox_device",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BlackboxMovie",
            fields=[
                (
                    "blackbox_movie_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("blackbox_movie_name", models.CharField(max_length=255)),
                ("movie_upload_at", models.DateTimeField()),
                ("movie_start_at", models.DateTimeField()),
                ("movie_end_at", models.DateTimeField()),
            ],
            options={
                "db_table": "blackbox_movie",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BlackboxMovieLabelInfo",
            fields=[
                (
                    "blackbox_movie_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("is_accident", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "blackbox_movie_label_info",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Car",
            fields=[
                ("car_id", models.AutoField(primary_key=True, serialize=False)),
                ("car_num", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "car",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CarClass",
            fields=[
                ("car_class_id", models.AutoField(primary_key=True, serialize=False)),
                ("car_class_name", models.CharField(max_length=255)),
                ("car_manufacturer", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "car_class",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("device_type_id", models.UUIDField()),
                ("uid", models.CharField(max_length=100, unique=True)),
                ("state", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "device",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DeviceType",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "device_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.SmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                ("driver_id", models.AutoField(primary_key=True, serialize=False)),
                ("driver_name", models.CharField(max_length=255)),
                ("driver_gender", models.BooleanField()),
                ("driver_created_at", models.DateTimeField()),
                ("driver_birthday", models.DateField()),
            ],
            options={
                "db_table": "driver",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EventTimelineMemo",
            fields=[
                (
                    "event_timeline_memo_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("car_id", models.IntegerField()),
                ("event_at", models.DateTimeField()),
                ("event_desc", models.TextField()),
                ("event_desc_created_at", models.TextField()),
                ("event_desc_modified_at", models.TextField(blank=True, null=True)),
                ("is_valid", models.BooleanField()),
                ("is_accident", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "event_timeline_memo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Manager",
            fields=[
                ("manager_id", models.AutoField(primary_key=True, serialize=False)),
                ("manager_name", models.CharField(max_length=255)),
                ("manager_role", models.IntegerField()),
            ],
            options={
                "db_table": "manager",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SensorData",
            fields=[
                ("sensor_data_id", models.AutoField(primary_key=True, serialize=False)),
                ("timestamp_ref", models.DateTimeField()),
                ("acc_x", models.TextField()),
                ("acc_y", models.TextField()),
                ("acc_z", models.TextField()),
            ],
            options={
                "db_table": "sensor_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UfosDeviceSample",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("device_name", models.CharField(max_length=100)),
                ("company_name", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "ufos_device_sample",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("vin", models.CharField(max_length=100)),
                ("car_number", models.CharField(max_length=100)),
                ("vehicle_class_id", models.UUIDField()),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField()),
            ],
            options={
                "db_table": "vehicle",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VehicleClass",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("brand_name", models.CharField(max_length=100)),
                ("model_name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "vehicle_class",
                "managed": False,
            },
        ),
    ]
